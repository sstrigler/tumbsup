// Generated by CoffeeScript 1.3.1

/*
Python's urllib.quote

escape does not escape:
`* + - . / @ _`

encodeURIComponent does not escape:

! ' ( ) * - . _ ~
*/


(function() {
  var doublequote, quote, replaceMismatch, unquote;

  quote = function(str) {
    str = escape(str).replace(/\%21/g, '!').replace(/\%27/g, '\'').replace(/\%28/g, '\(').replace(/\%29/g, '\)').replace(/\%7E/g, '\~');
    return str.replace(/\+/g, '%2B').replace(/\//g, '%2F').replace(/@/g, '%40').replace(/\s/g, '%2B');
  };

  replaceMismatch = function(str) {
    return str.replace(/\!/g, "%21").replace(/\'/g, "%27").replace(/\(/g, "%28").replace(/\)/g, "%29").replace(/\*/g, "%2A");
  };

  doublequote = function(str) {
    return replaceMismatch(quote(str)).replace(/%/g, '%25');
  };

  unquote = function(str) {
    return unescape(str).replace(/\%21/g, '!').replace(/\%27/g, '\'').replace(/\%28/g, '\(').replace(/\%29/g, '\)').replace(/\%7E/g, '\~').replace(/\s/g, '%2B');
  };

  (function(name, definition) {
    var global, old, theModule;
    if (typeof define === "function") {
      return define(definition);
    } else if (typeof module !== "undefined" && module.exports) {
      return module.exports = definition();
    } else {
      theModule = definition();
      global = this;
      old = global[name];
      theModule.noConflict = function() {
        global[name] = old;
        return theModule;
      };
      return global[name] = theModule;
    }
  })("escapePy", function() {
    return {
      quote: quote,
      doublequote: doublequote,
      replaceMismatch: replaceMismatch,
      unquote: unquote
    };
  });

}).call(this);
